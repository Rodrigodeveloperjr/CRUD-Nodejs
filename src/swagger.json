{
    "openapi": "3.0.0",
    "info": {
        "title": "User and Book manipulation API",
        "description": "This API aims to manipulate users and books",
        "termsOfService": "http://localhost:3000/terms",
        "contact": {
            "email": "rodrigojsdeveloper@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "test API"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "summary": "User registration",
                "description": "This route will be responsible for registering the user",
                "tags": [ "Users" ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Users"
                            },
                            "examples": {
                                "users": {
                                    "value": {
                                        "name": "rodrigo",
                                        "email": "rodrigojsdeveloper@gmail.com",
                                        "password": "@56d35GH",
                                        "phone": "99 99999-9999"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "409": {
                        "description": "Email already registered"
                    },
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            
            "get": {
                "summary": "List all users",
                "description": "This route will be responsible for listing all users",
                "tags": [ "Users" ],
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "items": {
                                        "$ref": "#/components/schemas/Users"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "patch": {
                "summary": "Edit a user",
                "description": "This route will be responsible for editing user",
                "tags": [ "Users" ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "Edit user by ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Users"
                            },
                            "examples": {
                                "userUpdate": {
                                    "value": {
                                        "name": "example",
                                        "phone": "11 12345-6789"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "description": "This route will be responsible for deleting user",
                "tags": [ "Users" ],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "Delete user by ID",
                    "required": true
                }],
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/book": {
            "post": {
                "summary": "Book registration",
                "description": "This route will be responsible for registering book",
                "tags": [ "Books" ],
                "security": [
                    { "bearerAuth": [] }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            },
                            "examples": {
                                "book": {
                                    "value": {
                                        "name": "HTML and CSS: Design and Build Websites",
                                        "author": "Jon Duckett",
                                        "pages": 512
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "201": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Book listing",
                "description": "This route will be responsible for listing book",
                "tags": [ "Books" ],
                "security": [
                    { "bearerAuth": [] }
                ],
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/book/{id}": {
            "patch": {
                "summary": "Edit a book",
                "description": "This route will be responsible for editing book",
                "tags": [ "Books" ],
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "Edit book by ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Book"
                            },
                            "examples": {
                                "bookUpdate": {
                                    "value": {
                                        "name": "JavaScript and Jquery: Interactive Front-End Web Development",
                                        "pages": 640
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete a book",
                "description": "This route will be responsible for deleting book",
                "tags": [ "Books" ],
                "security": [
                    { "bearerAuth": [] }
                ],
                "parameters": [{
                    "name": "ID",
                    "in": "path",
                    "description": "Delete book by ID",
                    "required": true
                }],
                "responses": {
                    "400": {
                        "description": "Error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Users": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "Date"
                    },
                    "updated_at": {
                        "type": "Date"
                    }
                }
            },
            "Book": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type":"string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "pages": {
                        "type": "number"
                    },
                    "created_at": {
                        "type": "Date"
                    },
                    "updated_at": {
                        "type": "Date"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}
